multiply operator
int a = 5, b = 3;
cout << a*b << endl;
通常使用在兩個變數要做相乘的時候

pointer
int a = 5;
int *pa = &a;
表示今天pa因為加上*，成為指標變數，所以可以擷取&a的位置，
如果今天要指向其他變數的位置，只要將*pa = &others即可獲取其它位置資訊

dereference operator
對於其理解為，上述當你在宣告指標的時候可以放入一個變數的位置，比如說a值的位址值，給pa這個
指標變數，但如果我今天要對其拿取a這個值來使用並更改，有可能因為int a與其他位置的函數不在同
一個區域變數中，所以使用指標就可以輕鬆的在不同區域變數中改變a值，舉個例子
void pointer(*a)
{
 *a = 5;
}

int main()
{
 int k = 2;
 cout << k << endl;
 pointer(&k)
 cout << k << endl;
}

screen:
2
5

先使用指標將k值的位址傳給pointer這個函數，再使用dereference operator，使其有變更k值的能力
因為反參照運算子，就是將指標所指向的空間內的值回傳回去，*a = 5 就是將5這個值回傳回去到k的位址
並將k值內的值變更成5，可以看出，其cout的結果會與k值原本的值不一樣，這就是透過指標與反參照
運算子進行配合。